#pragma once

#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <boost/multi_array.hpp>
#include <cereal/types/array.hpp>
#include "cocos2d.h"
#include "PaintTile.h"

class Puzzle
{
public:
	std::vector<std::vector<char>> currenttilevector = keytilevectorvalues;
	std::vector<std::vector<char>> currenttilevectorsolution = keytilevectorsolution;
	std::vector<std::vector<char>> whichplayertilesvector = keyplayertilesvector;
	std::vector<std::vector<char>> drytilevector = keydrytilesvector;
	std::vector<std::vector<PaintTile*>> tilespritevector;

	bool isSolved() { return (tilesCompleted == totalTiles) ? true : false; }
	//check if a tile is correct (i.e. matches solution value)
	bool checkTile(int x, int y);
	bool checkTile(int x, int y, int num);
	//change grids to match new level's grids
	void changePuzzle(int level);
	//get total number of grid tiles
	int getTotalTiles(void) { return totalTiles; }
	//set total number of grid tiles
	void setTotalTiles(int t) { totalTiles = t; }
	//get number of completed tiles
	int getTilesCompleted(void) { return tilesCompleted; }
	//set number of completed tiles
	void setTilesCompleted(int t) { tilesCompleted = t; }
	//increase # of completed tiles by 1
	void tileCompleted() { tilesCompleted++;}
	//decrement tilesComplete if a correct tile is erased
	void tileErased() { tilesCompleted--; }

	std::vector<std::vector<char>> samtilevectorvalues =
	{ {
		{ 1,1,1,1,1,1,1 },
		{ 1,1,1,1,1,1,1 },
		{ 1,1,1,1,1,1,1 },
		{ 1,1,1,1,1,1,1 },
		{ 1,1,1,1,1,1,1 }
		} };

	std::vector<std::vector<char>> samtilevectorsolution =
	{ {
		{ 6,  12, 14, 14, 14, 12, 6 },
		{ 12, 12, 13, 14, 13, 12, 12 },
		{ 12, 12, 14, 12, 14, 12, 12 },
		{ 6,  12, 12, 12, 12, 12, 6 },
		{ 6,  6,  12, 12, 12, 6,  6 }
		} };


	std::vector<std::vector<char>> samplayertilesvector =
	{ {
		{ 0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0 }
		} };

	std::vector<std::vector<char>> samdrytilesvector =
	{ {
		{ 0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0 }
		} };

	std::vector<std::vector<char>> candytilevectorvalues =
	{ {
		{ 1,1,1,1,1,1,1,1,1,1 },
		{ 1,1,1,1,1,1,1,1,1,1 },
		{ 1,1,1,1,1,1,1,1,1,1 },
		{ 1,1,1,1,1,1,1,1,1,1 },
		{ 1,1,1,1,1,1,1,1,1,1 },
		{ 1,1,1,1,1,1,1,1,1,1 },
		{ 1,1,1,1,1,1,1,1,1,1 }

		} };

	std::vector<std::vector<char>> candytilevectorsolution =
	{ {
		{ 9, 9,  15, 9, 9,  9,  9,  9, 15, 12 },
		{ 9, 13, 2, 12, 9,  9,  9,  13, 2, 12 },
		{ 15,12, 2,  9, 9,  9,  15, 12, 2, 9 },
		{ 2, 12, 9,  9, 9,  13,  2, 12, 9, 9 },
		{ 2, 12, 15, 9, 15, 12,  2, 9,  9, 9 },
		{ 9, 12, 2, 12, 2,  12,  9, 9,  9, 9 },
		{ 9, 9,  2, 12, 2,  9,  9,  9,  9, 9 }
		} };

	std::vector<std::vector<char>> candyplayertilesvector =
	{ {
		{ 0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0 }
		} };

	std::vector<std::vector<char>> candydrytilesvector =
	{ {
		{ 0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0 }
		} };
	
	std::vector<std::vector<char>> keytilevectorvalues =
	{ {
		{ 1,1,1,1,1 },
		{ 1,1,1,1,1 },
		{ 1,1,1,1,1 },
		{ 1,1,1,1,1 },
		{ 1,1,1,1,1 },
		{ 1,1,1,1,1 },
		{ 1,1,1,1,1 },
		{ 1,1,1,1,1 },
		{ 1,1,1,1,1 }
	} };
	std::vector<std::vector<char>> keytilevectorsolution =
	{ {
		{ 6,6,6,6,6 },
		{ 6,6,5,5,6 },
		{ 6,6,4,6,6 },
		{ 6,6,4,5,6 },
		{ 6,6,4,6,6 },
		{ 6,5,5,5,6 },
		{ 6,4,6,5,6 },
		{ 6,4,4,5,6 },
		{ 6,6,6,6,6 }
	} };

	std::vector<std::vector<char>> keyplayertilesvector =
	{ {
		{ 0,0,0,0,0 },
		{ 0,0,0,0,0 },
		{ 0,0,0,0,0 },
		{ 0,0,0,0,0 },
		{ 0,0,0,0,0 },
		{ 0,0,0,0,0 },
		{ 0,0,0,0,0 },
		{ 0,0,0,0,0 },
		{ 0,0,0,0,0 }

	} };

	std::vector<std::vector<char>> keydrytilesvector =
	{ {
		{ 0,0,0,0,0 },
		{ 0,0,0,0,0 },
		{ 0,0,0,0,0 },
		{ 0,0,0,0,0 },
		{ 0,0,0,0,0 },
		{ 0,0,0,0,0 },
		{ 0,0,0,0,0 },
		{ 0,0,0,0,0 },
		{ 0,0,0,0,0 }

		} };
	/*
	std::vector<std::vector<char>> oldsuntilevectorvalues =
	{ {
		{ 1,1,1,1,1,1 },
		{ 1,1,1,1,1,1 },
		{ 1,1,1,1,1,1 },
		{ 1,1,1,1,1,1 },
		{ 1,1,1,1,1,1 },
		{ 1,1,1,1,1,1 }
	} };
	std::vector<std::vector<char>> oldsuntilevectorsolution =
	{ {
		{ 3,3,5,2,3,3 },
		{ 3,2,4,4,5,3 },
		{ 5,4,4,4,4,2 },
		{ 2,4,4,4,4,5 },
		{ 3,5,4,4,2,3 },
		{ 3,3,2,5,3,3 }
	} };

	std::vector<std::vector<char>> oldsunplayertilesvector =
	{ {
		{ 0,0,0,0,0,0 },
		{ 0,0,0,0,0,0 },
		{ 0,0,0,0,0,0 },
		{ 0,0,0,0,0,0 },
		{ 0,0,0,0,0,0 },
		{ 0,0,0,0,0,0 }
	} };

	std::vector<std::vector<char>> oldsundrytilesvector =
	{ {
		{ 0,0,0,0,0,0 },
		{ 0,0,0,0,0,0 },
		{ 0,0,0,0,0,0 },
		{ 0,0,0,0,0,0 },
		{ 0,0,0,0,0,0 },
		{ 0,0,0,0,0,0 }
		} };
	*/
	std::vector<std::vector<char>> ptertilevectorvalues = // CHANGED ALL THE TERA MAPS
	{ {
			/*
			{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
			{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
			{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
			{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
			{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
			{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
			{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
			{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
			{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
			{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
			{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
			{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 }
			*/

		{ 0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0 }
		} };

	std::vector<std::vector<char>> ptertilevectorsolution =
	{ {
			/*
			{ 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8},
			{ 8, 8, 8, 8, 8, 8, 8, 8,10, 8, 9, 8, 8, 8, 8, 8, 8},
			{ 8, 8, 8, 8, 8, 8, 8, 8, 8,10, 9, 8, 8, 8, 8, 8, 8},
			{ 8, 8, 7, 8, 8, 8, 8, 9, 9, 9,10, 9, 8, 8, 8, 8, 8},
			{ 8, 7, 7, 7, 8, 8, 9,10,10,10,10,10, 9, 8, 7, 8, 8},
			{ 7, 7, 7, 7, 7, 9,10,10,10,10,10,10,10, 9, 7, 7, 8},
			{ 7,10,10,10,10,10,10,10,11,11,11, 8, 7,10, 9, 7, 7},
			{ 7, 7,10,10, 9,10, 7,10,11,11,11,11, 7, 7,10, 7, 7},
			{ 7, 7, 7,10,10,10, 7, 7,10,11,11,11, 7, 7,10, 7, 7},
			{ 7, 7, 7, 7, 7,10,10, 7, 7,10,11,11,11, 7, 7, 7, 7},
			{ 7, 7, 7, 7, 7, 7, 7,10, 7, 7,10,10,10,10, 7, 7, 7},
			{ 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7}
			*/

			/*
			{ 7, 7, 7, 7,10,10, 7, 7,10,10,10, 7 },
			{ 7, 7,10,10,10, 7, 7,10,11,11, 7, 7 },
			{ 7,10, 9,10, 7,10,11,11,11, 7, 7,10 },
			{ 10,10,10,10,10,10,11,11,8, 7,10, 9 },
			{ 7, 7, 7, 9,10,10,10,10,10,10, 9, 7},
			{ 7, 7, 7, 8, 9,10,10,10,10, 9, 8, 7},
			{ 8, 7, 8, 8, 8, 9, 9,10, 9, 8, 8, 8},
			{ 8, 8, 8, 8, 8, 8,10, 9, 8, 8, 8 ,8}
			*/

		{ 8, 8, 8, 8, 8, 8,10, 9, 8, 8, 8 ,8 },
		{ 8, 7, 8, 8, 8, 9, 9,10, 9, 8, 8, 8 },
		{ 7, 7, 7, 8, 9,10,10,10,10, 9, 8, 7 },
		{ 7, 7, 7, 9,10,10,10,10,10,10, 9, 7 },
		{ 10,10,10,10,10,10,11,11,8, 7,10, 9 },
		{ 7,10, 9,10, 7,10,11,11,11, 7, 7,10 },
		{ 7, 7,10,10,10, 7, 7,10,11,11, 7, 7 },
		{ 7, 7, 7, 7,10,10, 7, 7,10,10,10, 7 }

		} };

	std::vector<std::vector<char>> pterplayertilesvector =
	{ {
			/*
			{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
			{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
			{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
			{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
			{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
			{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
			{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
			{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
			{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
			{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
			{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
			{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 }
			*/

		{ 0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0 }
		} };

	std::vector<std::vector<char>> pterdrytilesvector =
	{ {
			/*
			{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
			{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
			{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
			{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
			{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
			{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
			{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
			{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
			{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
			{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
			{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
			{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 }
			*/

		{ 0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0 }
		} };

	// Changed all the sun maps
	std::vector<std::vector<char>> suntilevectorvalues =
	{ {
		{ 1,1,1,1,1,1,1,1,1,1,1,1,1 },
		{ 1,1,1,1,1,1,1,1,1,1,1,1,1 },
		{ 1,1,1,1,1,1,1,1,1,1,1,1,1 },
		{ 1,1,1,1,1,1,1,1,1,1,1,1,1 },
		{ 1,1,1,1,1,1,1,1,1,1,1,1,1 },
		{ 1,1,1,1,1,1,1,1,1,1,1,1,1 },
		{ 1,1,1,1,1,1,1,1,1,1,1,1,1 },
		{ 1,1,1,1,1,1,1,1,1,1,1,1,1 },
		{ 1,1,1,1,1,1,1,1,1,1,1,1,1 },
		{ 1,1,1,1,1,1,1,1,1,1,1,1,1 },
		} };
	std::vector<std::vector<char>> suntilevectorsolution =
	{ {
			/*
			{ 8, 2, 8,16, 2,16, 2,16, 2,16, 8, 2, 8 },
			{16, 8,16, 2,16, 2,16, 2,16, 2,16, 8, 2 },
			{ 8,16, 2,16, 2, 2, 2, 2, 2,16, 2,16, 8 },
			{16, 2,16, 2, 2, 4, 4, 4, 2, 2,16, 2,16 },
			{ 2,16, 2, 2, 4,12,12,12, 4, 2, 2,16, 2 },
			{16, 2, 2, 4,12,12,12,12,12, 4, 2, 2,16 },
			{10,11, 4, 4,12,12,12,12,12, 4, 2, 4,11 },
			{ 9,10,10,11, 4,12,12,12,12, 4,11,10,10 },
			{ 9,10, 9,10,10, 9, 4,12, 4,10, 9,10, 9 },
			{ 9, 9,10, 9,10,10,11,10,10, 9,10, 9, 9 }
			*/

		{ 9, 9,10, 9,10,10,11,10,10, 9,10, 9, 9 },
		{ 9,10, 9,10,10,11, 4,12, 4,10, 9,10, 9 },
		{ 9,10,10,11, 4,12,12,12,12, 4,11,10,10 },
		{ 10,11, 4, 4,12,12,12,12,12, 4, 2, 4,11 },
		{ 16, 2, 2, 4,12,12,12,12,12, 4, 2, 2,16 },
		{ 2,16, 2, 2, 4,12,12,12, 4, 2, 2,16, 2 },
		{ 16, 2,16, 2, 2, 4, 4, 4, 2, 2,16, 2,16 },
		{ 8,16, 2,16, 2, 2, 2, 2, 2,16, 2,16, 8 },
		{ 16, 8,16, 2,16, 2,16, 2,16, 2,16, 8, 2 },
		{ 8, 2, 8,16, 2,16, 2,16, 2,16, 8,16, 8 },

		} };

	std::vector<std::vector<char>> sunplayertilesvector =
	{ {
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0 }
		} };

	std::vector<std::vector<char>> sundrytilesvector =
	{ {
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0 }
		} };

	private:

		int totalTiles = 0;
		int tilesCompleted = 0;
};